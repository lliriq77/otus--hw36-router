{"version":3,"file":"bundle.js","mappings":"yBAGO,IAAMA,EAAS,WACpB,IAAMC,EAAQC,SAASC,SAErBC,SAASC,eAAe,QACxBC,UAFF,cAEqBL,EAFrB,UAMFM,OAAOC,iBAAiB,QAAQ,WAC9BR,OAIFO,OAAOC,iBAAiB,YAAY,SAACC,GACnCT,OAIFI,SAASM,KAAKF,iBAAiB,SAAS,SAACC,GACvC,IAAIA,EAAME,QAAYF,EAAME,OAAuBC,QAAQ,KAA3D,CAGAH,EAAMI,iBACN,IAAIC,EAAML,EAAME,QAAWF,EAAME,OAAuBI,aAAa,QACrEC,QAAQC,UAAU,CAAEC,IAAK,MAAOJ,IAAAA,GAAOV,SAASe,MAAOL,GAEvDd,QC1BF,ICmCMoB,EACAC,EACAC,EAEEC,EAKAC,ED5CFC,EACJ,SAACC,GAAD,OACA,WAAsB,2BAAlBC,EAAkB,yBAAlBA,EAAkB,gBACpBC,QAAQC,KAAR,UAAgBH,EAAhB,iBAAgCI,KAAKC,UAAUJ,KAE7CvB,SAASC,eAAe,QACxBC,UAFF,cAEqBoB,EAFrB,WAKEM,GC0BAZ,EAAyB,GACzBC,EAAcnB,SAASC,SACvBmB,EAA8B,KAE5BC,EAAU,SAACU,EAAeC,GAAhB,OACbD,aAAiBE,QAAUF,EAAMG,KAAKF,IACrB,mBAAVD,GAAwBA,EAAMC,IACpB,iBAAVD,GAAsBA,IAAUC,GAEpCV,EAAiB,SAAC,GAKP,IAJfS,EAIe,EAJfA,MACAI,EAGe,EAHfA,QACAC,EAEe,EAFfA,QACAC,EACe,EADfA,cAEMZ,EAAc,CAAEN,YAAAA,EAAaC,aAAAA,EAAckB,MAAOxB,QAAQwB,OAEhED,GAAiBhB,EAAQU,EAAOZ,IAAgBkB,IAChDhB,EAAQU,EAAOZ,IAAgBgB,EAAQV,GACvCW,GAAWf,EAAQU,EAAOX,IAA2BgB,KAwChD,CAAEG,GArBO,SAACR,EAAOI,EAASC,EAASC,GACxC,IAAMG,EAfW,WAQjB,IAPA,IAAMC,EAAkB,kBACtBC,KAAKC,MAAMD,KAAKE,SAAW1B,EAAU2B,OAAS,MAE1CC,EAAY,SAACN,GAAD,OAChBtB,EAAU6B,MAAK,SAACC,GAAD,OAAcA,EAASR,KAAOA,MAE3CA,EAAKC,IACFK,EAAUN,IACfA,EAAKC,IAEP,OAAOD,EAIIS,GAELD,EAAsB,CAAER,GAAAA,EAAIT,MAAAA,EAAOI,QAAAA,EAASC,QAAAA,EAASC,cAAAA,GAI3D,OAHAnB,EAAUgC,KAAKF,GACf1B,EAAe0B,GAER,WACLtB,QAAQyB,IAAI,WACZjC,EAAYA,EAAUkC,QAAO,SAACC,GAAD,OAAQA,EAAGb,KAAOA,OAYtCc,GARF,SAAC1C,EAAa0B,GACvBlB,EAAeD,EACfL,QAAQC,UAAUuB,EAAO1B,EAAKA,GAC9BO,EAAcnB,SAASC,SAhCQiB,EAAUqC,QAAQjC,MD9CjDkC,EAAc1B,EAAOS,GAAG,KAAMhB,EAAa,QAE/CO,EAAOS,GACL,KACA,WACEb,QAAQyB,IAAI,UAEdK,KACA,WACEA,EAAc1B,EAAOS,GAAG,KAAMhB,EAAa,WAI/CO,EAAOS,IACL,SAACP,GAAD,MAAmB,cAATA,IACVT,EAAa,aACbG,QAAQyB,IAAI,wBAGdrB,EAAOS,GAAG,SAAUhB,EAAa,WAEjCO,EAAOS,GAAG,YAAahB,EAAa,cAEpCrB,SAASM,KAAKF,iBAAiB,SAAS,SAACC,GACvC,IAAIA,EAAME,QAAYF,EAAME,OAAuBC,QAAQ,KAA3D,CAGAH,EAAMI,iBACN,IAAMC,EAAOL,EAAME,OAAuBI,aAAa,QACvDiB,EAAOwB,GAAG1C,GACV4C,QAGFnD,OAAOC,iBAAiB,YAAY,WAClCR,O","sources":["webpack://otus--hw36-router/./src/history-api.ts","webpack://otus--hw36-router/./src/index.ts","webpack://otus--hw36-router/./src/practice.ts"],"sourcesContent":["/* eslint-disable */\n\n// 0. Create a render function for visual debugging purposes\nexport const render = () => {\n  const route = location.pathname;\n  (\n    document.getElementById(\"root\") as HTMLElement\n  ).innerHTML = `<h2>${route}</h2>`;\n};\n\n// 1. Handle initial page load\nwindow.addEventListener(\"load\", () => {\n  render(); // ðŸ‘ˆ\n});\n\n// 2. Handle history navigations. alternative \"window.onpopstate\"\nwindow.addEventListener(\"popstate\", (event) => {\n  render();\n});\n\n// 3. Catch <a> tag clicks + trigger change handler\ndocument.body.addEventListener(\"click\", (event) => {\n  if (event.target && !(event.target as HTMLElement).matches(\"a\")) {\n    return;\n  }\n  event.preventDefault();\n  let url = event.target && (event.target as HTMLElement).getAttribute(\"href\");\n  history.pushState({ foo: \"bar\", url }, document.title, url);\n  // history.replaceState({ foo: \"bar\" }, url, url);\n  render(); // ðŸ‘ˆ\n});\n","import { Router, iArgs } from \"./practice\";\nimport { render } from \"./history-api\";\n\nconst createRender =\n  (content: string) =>\n  (...args: iArgs[]) => {\n    console.info(`${content} args=${JSON.stringify(args)}`);\n    (\n      document.getElementById(\"root\") as HTMLElement\n    ).innerHTML = `<h2>${content}</h2>`;\n  };\n\nconst router = Router();\n\nlet unsubscribe = router.on(/.*/, createRender(\"/.*\"));\n\nrouter.on(\n  \"/\",\n  () => {\n    console.log(\"home\");\n  }, // onEnter\n  unsubscribe(), // onLeave\n  () => {\n    unsubscribe = router.on(/.*/, createRender(\"/.*\"));\n  } // onBeforeEnter\n);\n\nrouter.on(\n  (path) => path === \"/contacts\",\n  createRender(\"/contacts\"),\n  console.log(\"[leaving] /contacts\")\n);\n\nrouter.on(\"/about\", createRender(\"/about\"));\n\nrouter.on(\"/about/us\", createRender(\"/about/us\"));\n\ndocument.body.addEventListener(\"click\", (event) => {\n  if (event.target && !(event.target as HTMLElement).matches(\"a\")) {\n    return;\n  }\n  event.preventDefault();\n  const url = (event.target as HTMLElement).getAttribute(\"href\") as string;\n  router.go(url);\n  unsubscribe();\n});\n\nwindow.addEventListener(\"popstate\", () => {\n  render();\n});\n","/* eslint-disable */\n\n/**\n * TODO: modify router.js to support\n * 1. unsubscribe function.\n *    Hint: inside router.js function return unsubscribe function,\n *          which will remove listener by id\n * 2. onLeave callback\n *    Hint: Add 3rd 'onLeave' parameter to Router.on + save in listener object\n *          Check in Router.handleListener if previousPath matches listener\n */\n\n// IMPLEMENTATION\n\nexport interface iListener {\n  id?: number;\n  match: iMatch;\n  onEnter: ((...args: iArgs[]) => () => void) | (() => void);\n  onLeave?: (() => string | void) | void;\n  onBeforeEnter?: () => string | void;\n}\n\nexport interface iArgs {\n  currentPath: string;\n  previousPath: string | null;\n  state: string;\n}\n\nexport type iOn = (\n  match: iMatch,\n  onEnter: ((...args: iArgs[]) => () => void) | (() => void),\n  onLeave?: (() => string | void) | void,\n  onBeforeEnter?: () => string | void\n) => () => void;\n\ntype iMatch = RegExp | string | ((a?: string) => void | boolean);\n\nexport function Router() {\n  let listeners: iListener[] = [];\n  let currentPath = location.pathname;\n  let previousPath: string | null = null;\n\n  const isMatch = (match: iMatch, path: string) =>\n    (match instanceof RegExp && match.test(path)) ||\n    (typeof match === \"function\" && match(path)) ||\n    (typeof match === \"string\" && match === path);\n\n  const handleListener = ({\n    match,\n    onEnter,\n    onLeave,\n    onBeforeEnter,\n  }: iListener) => {\n    const args: iArgs = { currentPath, previousPath, state: history.state };\n\n    onBeforeEnter && isMatch(match, currentPath) && onBeforeEnter();\n    isMatch(match, currentPath) && onEnter(args);\n    onLeave && isMatch(match, previousPath as string) && onLeave();\n  };\n\n  const handleAllListeners = () => listeners.forEach(handleListener);\n\n  const generateId = () => {\n    const getRandomNumber = () =>\n      Math.floor(Math.random() * listeners.length * 1000);\n\n    const doesExist = (id: number) =>\n      listeners.find((listener) => listener.id === id);\n\n    let id = getRandomNumber();\n    while (doesExist(id)) {\n      id = getRandomNumber();\n    }\n    return id;\n  };\n\n  const on: iOn = (match, onEnter, onLeave, onBeforeEnter) => {\n    const id = generateId();\n\n    const listener: iListener = { id, match, onEnter, onLeave, onBeforeEnter };\n    listeners.push(listener);\n    handleListener(listener);\n\n    return () => {\n      console.log(\"removed\");\n      listeners = listeners.filter((el) => el.id !== id);\n    };\n  };\n\n  const go = (url: string, state?: string) => {\n    previousPath = currentPath;\n    history.pushState(state, url, url);\n    currentPath = location.pathname;\n\n    handleAllListeners();\n  };\n\n  return { on, go };\n}\n"],"names":["render","route","location","pathname","document","getElementById","innerHTML","window","addEventListener","event","body","target","matches","preventDefault","url","getAttribute","history","pushState","foo","title","listeners","currentPath","previousPath","isMatch","handleListener","createRender","content","args","console","info","JSON","stringify","router","match","path","RegExp","test","onEnter","onLeave","onBeforeEnter","state","on","id","getRandomNumber","Math","floor","random","length","doesExist","find","listener","generateId","push","log","filter","el","go","forEach","unsubscribe"],"sourceRoot":""}